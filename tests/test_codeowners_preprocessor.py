import unittest

from codeowners_backstage.codeowners_preprocessor import CodeOwnersPreprocessor


class CodeOwnersGenerationTestCase(unittest.TestCase):

    def test_should_substitute_group_name_with_members(self):
        # given
        template = """
        file.md @my-team
        """

        def get_team_members(name):
            assert name == "my-team"
            return ['adam@example.com', 'monika@example.com']
        preprocessor = CodeOwnersPreprocessor(get_team_members, preamble='')

        # when
        actual = preprocessor(template)

        # then
        expected = """
        file.md adam@example.com monika@example.com
        """
        self.assertEqual(actual, expected)

    def test_should_not_touch_emails_in_the_template(self):
        # given
        template = """
        file.md adam@example.com
        """

        def get_team_members(name):
            raise AssertionError("should not be called!")
        preprocessor = CodeOwnersPreprocessor(get_team_members, preamble='')

        # when
        actual = preprocessor(template,)

        # then
        expected = """
        file.md adam@example.com
        """
        self.assertEqual(actual, expected)

    def test_should_leave_group_names_as_is_if_they_are_not_found(self):
        # given
        template = """
        file.md @my-team
        """

        def get_team_members(name):
            assert name == "my-team"
            return None  # not found
        preprocessor = CodeOwnersPreprocessor(get_team_members, preamble='')

        # when
        actual = preprocessor(template)

        # then
        expected = """
        file.md @my-team
        """
        self.assertEqual(actual, expected)

    def test_should_prepend_preamble(self):
        # given
        template = "file.md @my-team"

        def get_team_members(name):
            return ['adam@example.com']
        preprocessor = CodeOwnersPreprocessor(get_team_members,
                                              preamble='# THIS FILE IS AUTOGENERATED. DO NOT EDIT THIS FILE DIRECTLY.',
                                              preamble_separator_length=10)

        # when
        actual = preprocessor(template)

        # then
        expected = "# THIS FILE IS AUTOGENERATED. DO NOT EDIT THIS FILE DIRECTLY.\n# --------\nfile.md adam@example.com"
        self.assertEqual(actual.strip(), expected.strip())


